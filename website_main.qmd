---
title: "website_main"
format: html
editor: visual
---

### Using this notebook to work on the website traffic piece.

```{r}
library(tidyverse)
library(showtext)
```

```{r}
font_add_google("Public Sans", "public_sans")
showtext_auto()
showtext_opts(dpi=300)
```

## Users by Device

```{r}
ga_fullsite_device <- ga_fullsite_device_raw |>
  rename(Date = `Month of Year`,
         Device = `Device Category`)
```

```{r}
ga_fullsite_device |>
  ggplot(aes(x = Date, 
             y = Users,
             color = Device))+
  geom_line(linewidth = 1)+
  geom_point(size = 2)+
  geom_text_repel(aes(label = Users),
                  point.padding = 5,
                  direction = "both",
                  nudge_y = 250000,
                  show.legend = FALSE)+
  scale_y_continuous(labels = scales::label_comma())+
  scale_color_manual(values = categorical_pal)+
  labs(x = NULL)+
  theme_minimal()+
  theme(axis.text.x = element_text(hjust = 1),
        axis.title.x = element_text(size = 10),
        text = element_text(family ="public_sans")) 

ggsave("charts/web_device.png", 
       plot = last_plot(),
       device = "png")
```

```{r}
ga_fullsite_device |>
  pivot_wider(names_from = Date,
              values_from = Users)|>
  rename(apr_21 = `2021-04-01`,
         mar_21 = `2021-03-01`)|>
  mutate(perc_change = (apr_21 - mar_21) / (mar_21 + apr_21) * 100)

```

## Annotated finder search results

```{r}
web_search_annotated_raw |> 
  group_by(Category)|>
  summarize(March_21_count = sum(`March 2021 Search Queries`),
            April_21_count = sum(`April 2021 Search Queries`))|>
  arrange(desc(March_21_count))
```

```{r}
web_search_annotated_raw |> 
  group_by(Category)|>
  summarize(March_21_count = sum(`March 2021 Search Queries`),
            April_21_count = sum(`April 2021 Search Queries`),na.rm=TRUE)|>
  filter(!is.na(Category)) |>
  arrange(desc(March_21_count))|>
   pivot_longer(
    cols = c(March_21_count, April_21_count),  
    names_to = "Month",                     
    values_to = "Value"                       
  )|>
  ggplot(aes(x = reorder(Category,Value),
             y = Value,
             fill = Month
             
             ))+
  geom_col(linewidth = 1,
           position = "dodge")+
  scale_y_continuous(labels = scales::label_comma())+
  scale_fill_manual(values = categorical_pal)+
  coord_flip()+
  labs(x = NULL,
       y = "Number of Searches")+
  theme_minimal()+
  theme(
    text = element_text(family ="public_sans")
  )

ggsave("charts/web_topic_bar.png", 
       plot = last_plot(),
       device = "png")
```

Vaccine related questions drop significantly. Turn these into slope charts.

```{r}
web_search_annotated_raw |> 
  group_by(Category)|>
  summarize(`2021-03-01` = sum(`March 2021 Search Queries`),
            `2021-04-01` = sum(`April 2021 Search Queries`),na.rm=TRUE)|>
  filter(!is.na(Category)) |>
  arrange(desc(`2021-03-01`))|>
   pivot_longer(
    cols = c(`2021-03-01`, `2021-04-01`),  
    names_to = "Month",                    
    values_to = "Value" 
  )|>
  mutate(Month = as.Date(Month))|>
  ggplot(aes(x = Month,
             y = Value,
             color = Category,
             group = Category)
         )+
  geom_line(linewidth = 1)+
  geom_point()+
  scale_y_continuous(labels = scales::label_comma())+
  #scale_color_viridis_d(option = "E")+
  labs(x = NULL,
       y = "Number of Searches")+
  theme_minimal()+
  theme(
    text = element_text(family ="public_sans")
  )

ggsave("charts/web_topic_slope.png", 
       plot = last_plot(),
       device = "png")
```

## Sentiment

```{r}
web_search_annotated_raw |>
  group_by(Sentiment) |>
  summarize(count = n(), .groups = "drop")
```

Sentiment data would be harder to glean. Majority of the searches are neutrally phrased.

## Usage data per visitor

```{r}
ga_finder_raw |>
  ggplot(aes(x = Date, y = Users))+
  geom_area(alpha = 0.5,
            color = "#004d58",
            fill = "#004d58")+
  scale_y_continuous(label = scales::label_comma())+
  scale_x_date(date_labels = "%b %d",
               date_breaks = "1 week",
               date_minor_breaks = "1 day")+
  labs(x=NULL)+
  theme_minimal()

ggsave("charts/web_user_traffic.png", 
       plot = last_plot(),
       device = "png")


```

What happened on 4-19 2021? Also this doesn't make sense with the device chart...

```{r}

monthly_summary <- ga_finder_raw |>
  mutate(Month = floor_date(Date, "month")) |> 
  group_by(Month) |>  
  summarize(
    Total = sum(Users, na.rm = TRUE),  
    Average = mean(Users, na.rm = TRUE),  
    .groups = "drop",
    Avg.Session = mean(`Avg. Session Duration`, na.rm = TRUE),
    Avg.Time = mean(`Avg. Time on Page`, na.rm = TRUE)
  )
monthly_summary
```

```{r}
summary(ga_finder_raw)
```

Working to find the mean of average session durations

```{r}
#convert time to numeric and take the mean.
mean_time_on_page <- mean(as.numeric(ga_finder_raw$`Avg. Time on Page`), na.rm = TRUE)
mean_session <- mean(as.numeric(ga_finder_raw$`Avg. Session Duration`), na.rm = TRUE)


mean_time_on_page/60
mean_session/60
```

## Time per page

```{r}
ga_finder_raw |>
  ggplot(aes(x = Date ))+
  geom_area(aes(y = `Avg. Time on Page` ),
            alpha = 0.5,
            color = "#56930d",
            fill = "#56930d")+
  geom_area(aes( y = `Avg. Session Duration`),
            color = "#1780c7",
            fill = "#1780c7",
            alpha = 0.5)+
  labs(x = NULL,
       y = "Average Time")+
  theme_minimal()+
  theme(
    text = element_text(family ="public_sans")
  )

ggsave("charts/web_traffic_pagetime.png", 
       plot = last_plot(),
       device = "png")

```

### Site Language Usage

```{r}
ga_fullsite_raw |>
  separate(Language, into = c("language", "country"), sep = "-")|>
  group_by(language, `Month of Year`)|>
  summarize(language_total = sum(Users, na.rm = TRUE))|>
  arrange(desc(language_total))
```

### Slope Chart

```{r}
ga_fullsite_raw |>
  separate(Language, into = c("language", "country"), sep = "-")|>
  group_by(language, `Month of Year`)|>
  summarize(language_total = sum(Users, na.rm = TRUE))|>
    arrange(desc(language_total))
   ggplot(aes(x = `Month of Year`,
             y = language_total,
             color = language,
             group = language)
         )+
  geom_line(linewidth = 1)+
  geom_point()+
  scale_y_continuous(labels = scales::label_comma())+
  #scale_color_viridis_d(option = "E")+
  labs(x = NULL)+
  theme_minimal()+
  theme(
    text = element_text(family ="public_sans")
  )
```

```{r}
top_ten_languages <- ga_fullsite_raw |>
  #leparate language column into language and country
  separate(Language, into = c("language", "country"), sep = "-") |>
  group_by(language, `Month of Year`) |>
  summarize(language_total = sum(Users, na.rm = TRUE), .groups = "drop") |>
  group_by(language) |>
  filter(n_distinct(`Month of Year`) == 2) |>
  ungroup() |>
  group_by(language) |>
  summarize(total_users = sum(language_total), .groups = "drop") |>
  slice_max(total_users, n = 10) |>
  inner_join(
    ga_fullsite_raw |>
      separate(Language, into = c("language", "country"), sep = "-") |>
      group_by(language, `Month of Year`) |>
      summarize(language_total = sum(Users, na.rm = TRUE), .groups = "drop"),
    by = "language"
  ) |>
  arrange(desc(total_users))

top_ten_languages
```

```{r}
top_ten_languages |>
ggplot(aes(x = `Month of Year`,
             y = language_total,
             color = language,
             group = language)
         )+
  geom_line(linewidth = 1)+
  geom_point()+
  #scale_y_log10(labels = scales::label_comma())+
  scale_y_continuous(labels = scales::label_comma())+
  #scale_color_viridis_d(option = "E")+
  labs(x = NULL)+
  theme_minimal()+
  labs(x = NULL, 
       y = "Users per Language")
  theme(
    text = element_text(family ="public_sans")
  )
  
  ggsave("charts/web_traffic_languages.png", 
       plot = last_plot(),
       device = "png")
```
